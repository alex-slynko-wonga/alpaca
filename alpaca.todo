tasks:
 ☐ update .travis.yml to test gem with different ruby versions
 ☐ fill readme file with how to use alpaca
 ☐ push gem to https://rubygems.org and add version to readme
     [![Gem Version](https://badge.fury.io/rb/rubocop.svg)](http://badge.fury.io/rb/rubocop)
 ☐ add changelog
 ☐ add more specs to get green coverage
 ☐ add more documentation and examples

 ☐ Visual Studio solutions:
   ✔ configure @done (15-04-02 01:19)
     ✘ feature test @cancelled (15-04-02 01:19)
     ✔ global @done (15-04-02 01:19)
     ✔ local @done (15-04-02 01:19)
   ✔ compile (Nuget, MSBuild) @done (15-04-02 01:19)
     ✔ feature test @done (15-04-02 01:18)
     ✔ update dll version @done (15-04-02 01:18)
     ✔ restore nuget packages @done (15-04-02 01:18)
     ✔ compile solution @done (15-04-02 01:18)
     ✘ checkout AssemblyInfo.cs changes ??? @cancelled (15-04-02 01:19)
   ☐ test (NUnit, OpenCover)
     ☐ feature test
     ☐ find if solution have test projects for current category
     ☐ download test-runner if needed
     ☐ run tests with generation output for report generators
     ☐ download OpenCover if needed
     ☐ run test-runner inside OpenCover for coverage
     ☐ for service tests:
       ☐ generate service configuration
       ☐ start service
       ☐ run tests
       ☐ stop service
       ☐ controll that processes completed and kill zombies
   ☐ report (NUnit, OpenCover)
     ☐ feature test
     ☐ define categories
     ☐ convert output from test step into reports for OpenCover
       ☐ download valid nuget package with ReportGenerator
       ☐ convert
     ☐ convert output from test step into reports for NUnit
       ☐ download valid nuget package with ReportGenerator
       ☐ convert
   ☐ pack (Nuget)
     ☐ feature test
     ☐ generate .nuspec file per package
     ☐ create package
   ☐ push (Nuget)
     ☐ feature test
     ☐ check if contains changes from last pushed package version unless -f used
     ☐ push package (also for dev builds to push to local repo)
   ☐ release (Nuget)
     ☐ feature test
     ☐ download last package version(also for dev builds from local repo)
     ☐ unpack
     ☐ update version in .nuspec file
     ☐ pack again as a release version
     ☐ push package if needed(with push command probably)

 ☐ Unity 3D solutions:
   ✔ configure(same) @done (15-04-02 01:21)
   ☐ compile
   ☐ test
   ☐ report
   ☐ pack
   ☐ push
   ☐ release

 ☐ Alpaca gem stack:
 ☐ Unity3D project stack:
 ☐ Visual Studio project stack:
   ☐ work tools:
     ☐ Nuget
     ☐ NUnit
     ☐ OpenCover
     ☐ MSBuild
   ☐ services:
     ☐ gerrit???
     ☐ jenkins???
     ☐ vagrant???
   ☐ review - gerrit?
   ☐ ci:
     ☐ push to review -> check(compile, test, coverage)
     ☐ merge -> check -> create package(pack, push)